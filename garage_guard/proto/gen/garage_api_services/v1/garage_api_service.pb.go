// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: garage_api_services/v1/garage_api_service.proto

package garageApiServicesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

///-----------------------------------------
// LicensePlateCheck
type LicensePlateCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GarageId      string                 `protobuf:"bytes,1,opt,name=garage_id,json=garageId,proto3" json:"garage_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LicensePlateCheckRequest) Reset() {
	*x = LicensePlateCheckRequest{}
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LicensePlateCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicensePlateCheckRequest) ProtoMessage() {}

func (x *LicensePlateCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicensePlateCheckRequest.ProtoReflect.Descriptor instead.
func (*LicensePlateCheckRequest) Descriptor() ([]byte, []int) {
	return file_garage_api_services_v1_garage_api_service_proto_rawDescGZIP(), []int{0}
}

func (x *LicensePlateCheckRequest) GetGarageId() string {
	if x != nil {
		return x.GarageId
	}
	return ""
}

func (x *LicensePlateCheckRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type LicensePlateCheckResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LicensePlateString []string               `protobuf:"bytes,1,rep,name=license_plate_string,json=licensePlateString,proto3" json:"license_plate_string,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LicensePlateCheckResponse) Reset() {
	*x = LicensePlateCheckResponse{}
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LicensePlateCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicensePlateCheckResponse) ProtoMessage() {}

func (x *LicensePlateCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicensePlateCheckResponse.ProtoReflect.Descriptor instead.
func (*LicensePlateCheckResponse) Descriptor() ([]byte, []int) {
	return file_garage_api_services_v1_garage_api_service_proto_rawDescGZIP(), []int{1}
}

func (x *LicensePlateCheckResponse) GetLicensePlateString() []string {
	if x != nil {
		return x.LicensePlateString
	}
	return nil
}

//--------------------------------------------
// GestureSeqCheck
type GestureSeqCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GarageId      string                 `protobuf:"bytes,1,opt,name=garage_id,json=garageId,proto3" json:"garage_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	GestureSeq    string                 `protobuf:"bytes,3,opt,name=gesture_seq,json=gestureSeq,proto3" json:"gesture_seq,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GestureSeqCheckRequest) Reset() {
	*x = GestureSeqCheckRequest{}
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GestureSeqCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GestureSeqCheckRequest) ProtoMessage() {}

func (x *GestureSeqCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GestureSeqCheckRequest.ProtoReflect.Descriptor instead.
func (*GestureSeqCheckRequest) Descriptor() ([]byte, []int) {
	return file_garage_api_services_v1_garage_api_service_proto_rawDescGZIP(), []int{2}
}

func (x *GestureSeqCheckRequest) GetGarageId() string {
	if x != nil {
		return x.GarageId
	}
	return ""
}

func (x *GestureSeqCheckRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GestureSeqCheckRequest) GetGestureSeq() string {
	if x != nil {
		return x.GestureSeq
	}
	return ""
}

type GestureSeqCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Correct       bool                   `protobuf:"varint,1,opt,name=correct,proto3" json:"correct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GestureSeqCheckResponse) Reset() {
	*x = GestureSeqCheckResponse{}
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GestureSeqCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GestureSeqCheckResponse) ProtoMessage() {}

func (x *GestureSeqCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GestureSeqCheckResponse.ProtoReflect.Descriptor instead.
func (*GestureSeqCheckResponse) Descriptor() ([]byte, []int) {
	return file_garage_api_services_v1_garage_api_service_proto_rawDescGZIP(), []int{3}
}

func (x *GestureSeqCheckResponse) GetCorrect() bool {
	if x != nil {
		return x.Correct
	}
	return false
}

//--------------------------------------------
// UserIdCheck
type UserIdCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GarageId      string                 `protobuf:"bytes,1,opt,name=garage_id,json=garageId,proto3" json:"garage_id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserIdCheckRequest) Reset() {
	*x = UserIdCheckRequest{}
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserIdCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdCheckRequest) ProtoMessage() {}

func (x *UserIdCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdCheckRequest.ProtoReflect.Descriptor instead.
func (*UserIdCheckRequest) Descriptor() ([]byte, []int) {
	return file_garage_api_services_v1_garage_api_service_proto_rawDescGZIP(), []int{4}
}

func (x *UserIdCheckRequest) GetGarageId() string {
	if x != nil {
		return x.GarageId
	}
	return ""
}

func (x *UserIdCheckRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UserIdCheckRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserIdCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Correct       bool                   `protobuf:"varint,1,opt,name=correct,proto3" json:"correct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserIdCheckResponse) Reset() {
	*x = UserIdCheckResponse{}
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserIdCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdCheckResponse) ProtoMessage() {}

func (x *UserIdCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garage_api_services_v1_garage_api_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdCheckResponse.ProtoReflect.Descriptor instead.
func (*UserIdCheckResponse) Descriptor() ([]byte, []int) {
	return file_garage_api_services_v1_garage_api_service_proto_rawDescGZIP(), []int{5}
}

func (x *UserIdCheckResponse) GetCorrect() bool {
	if x != nil {
		return x.Correct
	}
	return false
}

var File_garage_api_services_v1_garage_api_service_proto protoreflect.FileDescriptor

var file_garage_api_services_v1_garage_api_service_proto_rawDesc = string([]byte{
	0x0a, 0x2f, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x54, 0x0a, 0x18, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x19, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x73,
	0x0a, 0x16, 0x47, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x65, 0x71, 0x22, 0x33, 0x0a, 0x17, 0x47, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x22, 0x67, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x32, 0xf5, 0x02, 0x0a, 0x17, 0x47, 0x61, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7a,
	0x0a, 0x11, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x30, 0x2e, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x0f, 0x47, 0x65,
	0x73, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2e, 0x2e,
	0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x71, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x2a, 0x2e, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x61,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x61,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x61, 0x72, 0x61,
	0x67, 0x65, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_garage_api_services_v1_garage_api_service_proto_rawDescOnce sync.Once
	file_garage_api_services_v1_garage_api_service_proto_rawDescData []byte
)

func file_garage_api_services_v1_garage_api_service_proto_rawDescGZIP() []byte {
	file_garage_api_services_v1_garage_api_service_proto_rawDescOnce.Do(func() {
		file_garage_api_services_v1_garage_api_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_garage_api_services_v1_garage_api_service_proto_rawDesc), len(file_garage_api_services_v1_garage_api_service_proto_rawDesc)))
	})
	return file_garage_api_services_v1_garage_api_service_proto_rawDescData
}

var file_garage_api_services_v1_garage_api_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_garage_api_services_v1_garage_api_service_proto_goTypes = []any{
	(*LicensePlateCheckRequest)(nil),  // 0: garage_api_services.v1.LicensePlateCheckRequest
	(*LicensePlateCheckResponse)(nil), // 1: garage_api_services.v1.LicensePlateCheckResponse
	(*GestureSeqCheckRequest)(nil),    // 2: garage_api_services.v1.GestureSeqCheckRequest
	(*GestureSeqCheckResponse)(nil),   // 3: garage_api_services.v1.GestureSeqCheckResponse
	(*UserIdCheckRequest)(nil),        // 4: garage_api_services.v1.UserIdCheckRequest
	(*UserIdCheckResponse)(nil),       // 5: garage_api_services.v1.UserIdCheckResponse
}
var file_garage_api_services_v1_garage_api_service_proto_depIdxs = []int32{
	0, // 0: garage_api_services.v1.GarageEntryCheckService.LicensePlateCheck:input_type -> garage_api_services.v1.LicensePlateCheckRequest
	2, // 1: garage_api_services.v1.GarageEntryCheckService.GestureSeqCheck:input_type -> garage_api_services.v1.GestureSeqCheckRequest
	4, // 2: garage_api_services.v1.GarageEntryCheckService.UserIdCheck:input_type -> garage_api_services.v1.UserIdCheckRequest
	1, // 3: garage_api_services.v1.GarageEntryCheckService.LicensePlateCheck:output_type -> garage_api_services.v1.LicensePlateCheckResponse
	3, // 4: garage_api_services.v1.GarageEntryCheckService.GestureSeqCheck:output_type -> garage_api_services.v1.GestureSeqCheckResponse
	5, // 5: garage_api_services.v1.GarageEntryCheckService.UserIdCheck:output_type -> garage_api_services.v1.UserIdCheckResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_garage_api_services_v1_garage_api_service_proto_init() }
func file_garage_api_services_v1_garage_api_service_proto_init() {
	if File_garage_api_services_v1_garage_api_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_garage_api_services_v1_garage_api_service_proto_rawDesc), len(file_garage_api_services_v1_garage_api_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_garage_api_services_v1_garage_api_service_proto_goTypes,
		DependencyIndexes: file_garage_api_services_v1_garage_api_service_proto_depIdxs,
		MessageInfos:      file_garage_api_services_v1_garage_api_service_proto_msgTypes,
	}.Build()
	File_garage_api_services_v1_garage_api_service_proto = out.File
	file_garage_api_services_v1_garage_api_service_proto_goTypes = nil
	file_garage_api_services_v1_garage_api_service_proto_depIdxs = nil
}
