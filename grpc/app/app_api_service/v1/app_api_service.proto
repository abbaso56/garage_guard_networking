syntax = "proto3";

package app_api_service.v1;

option go_package ="garage_guard/proto/gen/app_api_service/v1;appApiServicev1";

service AppApiService{
    //check connection
    rpc ConnectionCheck(ConnectionCheckRequest) returns (ConnectionCheckResponse){}

    // Creates a new user
    rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse){}


    // Signs in given the required credintials
    rpc SignIn(SignInRequest) returns (SignInResponse){}

    
    

   
}

service AuthedAppApiService{
    // Adds a new garage where the user can register a device and cars
    // The user that created the garage is registered as the admin
    rpc NewGarage(NewGarageRequest) returns (NewGarageResponse){}

    
    // Registers a device to the garage
    //rpc NewGarageDevice(NewGarageDeviceRequest) streams (NewGarageDeviceResponse){}


    // Gets the Garages that are registered to the user
    rpc GetGarages(GetGaragesRequest) returns (GetGaragesResponse){}
    
    // Gets a garage through its own id
    rpc GetGarageByGarageId(GetGarageByGarageIdRequest) returns (GetGarageByGarageIdResponse){}



    // Adds as new car to a garage
    rpc AddNewCar(AddNewCarRequest) returns (AddNewCarResponse){}


    // Update gesture sequence for garage 
    rpc UpdateGestureSeq (UpdateGestureSeqRequest) returns (UpdateGestureSeqResponse){}  




    // Get cars registered to a garage
    rpc GetCarsInGarage(GetCarsInGarageRequest) returns (GetCarsInGarageResponse){}
    
   
    // Adds device id 
    rpc AddDeviceId(AddDeviceIdRequest) returns (AddDeviceIdResponse){}

    // Add garage id
    rpc AddGarageId (AddGarageIdRequest) returns (AddGarageIdResponse){}

    // Grants garage access to another user

    // rpc AddUserToGarage(AddUserToGarageRequest) returns (AddUserToGarageResponse){}
   
}




//-------------------------------------
// ConnectionCheck

// Message is through headers(eg: rrt timestamps) and handled by intercepters
message ConnectionCheckRequest{}

message ConnectionCheckResponse{}






//-------------------------------------
// RegisterUser

// Request sent to server includes the username and password
message RegisterUserRequest{
    string username = 1;
    string password = 2;
    string csr = 3;
}

 
// Response from server with a jwt token for the authenticated session
message RegisterUserResponse{
    string user_id = 1;
    string username = 2;
    string certificate = 3;
}





//-------------------------------------
// SignIn

// User sends credintials for authentication
message SignInRequest{
    string username = 1;
    string password = 2;
    string csr = 3;
}


// Server validates user and then sends a token for the authenticated session
message SignInResponse{
    string user_id = 1;
    string username = 2;
    string certificate = 3;
}




//-------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------
// AuthedAppApiService-----------------------------------------------------------------------------------------------

//-------------------------------------
// NewGarage

// Creates a new garage resource with the user that created the garage being the admin
message NewGarageRequest{
    string garage_name = 1; 
    string user_id = 2;
}

// Responds to the garage request to indicate the status of the request

message NewGarageResponse{
}





//-------------------------------------
// GetGarages

message GetGaragesRequest{
    string user_id =1;
}

message Garage{
    string garage_name = 1;
    string id = 2;
}

message GetGaragesResponse{
    repeated Garage garages = 1; 
}







//-------------------------------------
//GetGarageByGarageId

message GetGarageByGarageIdRequest{
    string id = 1;
}


message GarageInfo{
    string id = 1;
    string garage_name =2;
    string device_id = 3;
    string gesture_seq = 4;
    string video_url = 5;
}
message GetGarageByGarageIdResponse{
    GarageInfo garage = 1;
}



//-------------------------------------
//AddNewCar

message AddNewCarRequest{
    string garage_id = 1;
    string license_plate = 2;
}


message AddNewCarResponse{
    bool status = 1;
}


//-------------------------------------
//UpdateGestureSeq

// numbers representing different gestures sent as a string separated by commas
// 1,2,3,5,6,8
message UpdateGestureSeqRequest{
    string garage_id = 1;
    string gesture_seq = 2;
}

message UpdateGestureSeqResponse{
    bool status = 1;
}


//-------------------------------------
//GetCarsInGarage

message GetCarsInGarageRequest{
    string garage_id = 1;
}

message GetCarsInGarageResponse{
    repeated string license_plate = 1;
}



//-------------------------------------
// AddDeviceId

message AddDeviceIdRequest{
    string garage_id = 1;
    string device_id = 2;
}

message AddDeviceIdResponse{
    bool status = 1;
}

//-------------------------------------
//AddGarageId

message AddGarageIdRequest{
    string user_id = 1;
    string garage_id = 2;
    string garage_name = 3;
}

message AddGarageIdResponse{
    bool status = 1;
}